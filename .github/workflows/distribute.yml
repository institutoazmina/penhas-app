name: "Distribute app"

on:
  workflow_call:
    inputs:
      platform:
        description: "Build target platform"
        type: string
        required: true
      environment:
        description: "Distribution environment"
        type: string
        required: true

    secrets:
      PENHAS_BASE_URL:
        required: true
      GEO_API_KEY:
        required: true
      FILES:
        required: true
      TESTER_EMAIL:
        required: false
      FIREBASE_TOKEN:
        required: true
      TARGET_LANE:
        required: true

jobs:
  distribute:
    needs: pre-distribute
    strategy:
      matrix: ${{ fromJSON(needs.pre-distribute.outputs.matrix) }}
    runs-on: ${{ matrix.runs-on }}
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.2.0

      - name: Setup Java
        if: ${{ matrix.platform == 'android' }}
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: "zulu"

      - name: Setup Android SDK
        if: ${{ matrix.platform == 'android' }}
        uses: android-actions/setup-android@v2

      - name: Retrieve Flutter version from FVM config
        uses: kuhnroyal/flutter-fvm-config-action@v1

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Install dependencies
        run: flutter pub get
        
      - name: Install Ruby to use Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
          working-directory: ${{ matrix.working-directory }}

      - name: Get secrets files
        run: base64 -d <<< ${{ secrets.FILES }} | tar xzf -

      - name: Run lane to distribute
        uses: maierj/fastlane-action@v3.0.0
        with:
          lane: ${{ needs.pre-distribute.outputs.lane }}
          options: '{ "tester_email": "${{ secrets.TESTER_EMAIL }}" }'
          subdirectory: ${{ matrix.working-directory }}
        env:
          PENHAS_BASE_URL: ${{ secrets.BASE_URL }}
          GEO_API_KEY: ${{ secrets.GEO_API_KEY }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  pre-distribute:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.definition.outputs.matrix }}
      lane: ${{ steps.definition.outputs.name }}
    env:
      ENVIRONMENT: ${{ inputs.environment }}
      PLATFORM: ${{ inputs.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.2.0

      - id: definition
        name: "Prepare distribution"
        run: |
          yaml2json() {
            python -c 'import sys, yaml, json; print(json.dumps(yaml.safe_load(sys.stdin.read())))'
          }

          JQ_EXPR=$(cat <<EOF
            del( .[] | select(.platform != "$PLATFORM" and "$PLATFORM" != "all"))
          EOF
          )
          MATRIX="{ \"include\": $(yaml2json < .github/distribute-platforms.yml | jq -Mc "$JQ_EXPR") }"

          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
          echo "name=$LANE" >> $GITHUB_OUTPUT
        env:
          LANE: ${{ secrets.TARGET_LANE }}
