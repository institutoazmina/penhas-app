name: "Distribute Android Flutter app"

on:
  workflow_call:
    inputs:
      environment:
        description: "Distribution environment"
        type: string
        required: true

    secrets:
      PENHAS_BASE_URL:
        required: true
      ANDROID_BUILD_FILES:
        required: true
      FIREBASE_TOKEN:
        required: false
      GOOGLE_SERVICE_ACCOUNT_CREDENTIAL_B64:
        required: true
      TESTER_EMAIL:
        required: false

# Define permissions for GITHUB_TOKEN
permissions:
  contents: read  # Required for actions/checkout
  id-token: write # Required for some authentication tasks
  packages: write # Required if you're publishing packages
  actions: write  # Required if you're triggering other workflows

jobs:
  distribute:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "zulu"

      - name: Setup Android SDK
        uses: android-actions/setup-android@7c5672355aaa8fde5f97a91aa9a99616d1ace6bc

      - name: Retrieve Flutter version from FVM config
        uses: kuhnroyal/flutter-fvm-config-action@6ffa30473b346f7d7c63cf9e03e6a886f940a72b

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@fd55f4c5af5b953cc57a2be44cb082c8f6635e8e
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Install Ruby to use Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
          working-directory: ./android

      - name: Get config files
        env: 
          ANDROID_BUILD_FILES: ${{ secrets.ANDROID_BUILD_FILES }}
        run: |
          echo "$ANDROID_BUILD_FILES" | base64 -d | tar xzf -

      - name: Get Google Account credentials
        shell: bash
        env:
          GOOGLE_SERVICE_ACCOUNT_CREDENTIAL_B64: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_CREDENTIAL_B64 }}
          GOOGLE_SERVICE_ACCOUNT_CREDENTIAL_PATH: ${{ runner.temp }}/play-store-api-key.json
        run: |
          echo "$GOOGLE_SERVICE_ACCOUNT_CREDENTIAL_B64" | base64 -d > "$GOOGLE_SERVICE_ACCOUNT_CREDENTIAL_PATH"
        
      
      - name: Increase Watcher Limit
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Clean Gradle & Flutter Build
        run: |
          flutter clean
          rm -rf android/.gradle
          rm -rf android/app/build
          rm -rf build
          rm -rf ~/.gradle/caches/
          rm -rf ~/.gradle/wrapper/

      - name: Debug APK location
        run: find . -type f -name "*.apk"

      - name: Disable Gradle Incremental Builds
        run: echo "org.gradle.configureondemand=false" >> android/gradle.properties

      - name: Set Gradle JVM Options
        run: echo "org.gradle.jvmargs=-Xmx4g" >> android/gradle.properties
        
      - name: Run lane to distribute
        uses: maierj/fastlane-action@516faaa1c6c7b366ecd238b4e4608d286874dd94
        with:
          lane: ${{ vars.TARGET_LANE }}
          options: '{ "tester_email": "${{ secrets.TESTER_EMAIL }}" }'
          subdirectory: ./android
        env:
          FASTLANE_SKIP_UPDATE_CHECK: true
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          GOOGLE_SERVICE_ACCOUNT_CREDENTIAL_PATH: ${{ runner.temp }}/play-store-api-key.json
          IOS_BUNDLE_ID: ${{ vars.IOS_BUNDLE_ID }}
          PENHAS_BASE_URL: ${{ secrets.PENHAS_BASE_URL }}
